{{ if eq .chezmoi.os "windows" -}}
# Self-elevate the script if required
if (-Not ([Security.Principal.WindowsPrincipal] [Security.Principal.WindowsIdentity]::GetCurrent()).IsInRole([Security.Principal.WindowsBuiltInRole] "Administrator")) {
  if ([int](Get-CimInstance -Class Win32_OperatingSystem | Select-Object -ExpandProperty BuildNumber) -ge 6000) {
    $CommandLine = "-ExecutionPolicy Bypass -NoExit -File `"" + $MyInvocation.MyCommand.Path + "`" " + $MyInvocation.UnboundArguments
    Start-Process -FilePath PowerShell.exe -Verb RunAs -ArgumentList $CommandLine -Wait
    Exit
  }
}
Function Test-CommandExists {
  Param ($command)

  $oldPreference = $ErrorActionPreference
  $ErrorActionPreference = "stop"

  try {
    if (Get-Command $command) {
      return $true
    }
  }
  Catch {
    return $false
  }
  Finally {
    $ErrorActionPreference = $oldPreference
  }
}

# Install Chocolatey if it is not already installed
if (-Not (Test-CommandExists "choco")) {
  Set-ExecutionPolicy Bypass -Scope Process -Force
  [System.Net.ServicePointManager]::SecurityProtocol = [System.Net.ServicePointManager]::SecurityProtocol -bor 3072
  Invoke-Expression ((New-Object System.Net.WebClient).DownloadString("https://community.chocolatey.org/install.ps1"))
}

$chocoPackages = @(
    'ripgrep',
    'cascadiafonts',
    'dotnetfx',
    'neovim',
    'firacode',
    'nerd-fonts-FiraCode'
)
Write-Host "Installing Chocolatey packages..."
choco upgrade chocolatey -y
choco upgrade $chocoPackages -y

Write-Host "Installing packages always used"
choco upgrade -y vim --params "/NoDesktopShortcuts /NoContextmenu /NoDefaultVimrc"
choco upgrade -y openssh

winget upgrade Git.Git
winget upgrade Microsoft.WindowsTerminal
winget upgrade Mozilla.Firefox
winget upgrade Starship.Starship
winget upgrade PuTTY.PuTTY
winget upgrade Microsoft.PowerShell
winget upgrade Microsoft.PowerToys
winget upgrade Microsoft.VisualStudioCode
winget upgrade Devolutions.RemoteDesktopManager

code --install-extension firefox-devtools.vscode-firefox-debug
code --install-extension ms-vscode-remote.remote-wsl
code --install-extension ms-vscode.powershell
code --install-extension usernamehw.errorlens
code --install-extension Tim-Koehler.helm-intellisense
code --install-extension dracula-theme.theme-dracula

exit 0
{{- end }}
